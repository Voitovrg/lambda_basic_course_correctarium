{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romav\\\\WebstormProjects\\\\react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./styles/App.css\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useText } from \"./components/TextContext/TextContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Data for operation of the first button responsible for service selection ( данные для работа первой кнопки которая отвечает за выбор услуги )\n  const [isOpenedService, setIsOpenedService] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"Послуга\"); // Начальное значение кнопки\n  const [selectedColor, setSelectedColor] = useState(\"\"); // Цвет для выбранного значения\n  const [label, setLabel] = useState('');\n  const serviceRef = useRef(null);\n  const [isOpenedLanguage, setIsOpenedLanguage] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(\"Мова\"); // Начальное значение кнопки\n  const [valueLanguageColor, setValueLanguageColor] = useState('');\n  const languageRef = useRef(null);\n  const [firstButtonSelected, setFirstButtonSelected] = useState(false);\n  const [selectedServiceOption, setSelectedServiceOption] = useState('');\n  const handleButtonClickService = () => {\n    // Активация кнопки\n    setIsOpenedService(!isOpenedService);\n  };\n  const handleButtonClickLanguage = () => {\n    // Активация кнопки\n    if (firstButtonSelected) {\n      setIsOpenedLanguage(!isOpenedLanguage);\n    }\n  };\n  const handleListOptionClickService = (value, color) => {\n    // Смена параметров кнопки Услуги\n    setSelectedValue(value);\n    setSelectedColor(color);\n    setIsOpenedService(false);\n    setFirstButtonSelected(true);\n    setSelectedServiceOption(value);\n    setLabel('Послуга');\n    if (value === 'Переклад') {\n      setSelectedLanguage('Мовна пара');\n    }\n  };\n  const handleListOptionClickLanguage = (value, color) => {\n    setSelectedLanguage(value);\n    setValueLanguageColor(color);\n    setIsOpenedLanguage(!isOpenedLanguage);\n  };\n  const getLanguageOptions = () => {\n    switch (selectedServiceOption) {\n      case 'Редагування':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-list-value-language\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            onClick: () => handleListOptionClickLanguage('Українська', 'color'),\n            children: \"\\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            onClick: () => handleListOptionClickLanguage('Російська', 'color'),\n            children: \"\\u0420\\u043E\\u0441\\u0456\\u0439\\u0441\\u044C\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            onClick: () => handleListOptionClickLanguage('Англійська', 'color'),\n            children: \"\\u0410\\u043D\\u0433\\u043B\\u0456\\u0439\\u0441\\u044C\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            onClick: () => handleListOptionClickLanguage('Англійська (носій)', 'color'),\n            children: \"\\u0410\\u043D\\u0433\\u043B\\u0456\\u0439\\u0441\\u044C\\u043A\\u0430 (\\u043D\\u043E\\u0441\\u0456\\u0439)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this);\n      case 'Переклад':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-list-value-language\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            onClick: () => handleListOptionClickLanguage('Українська', 'color'),\n            children: \"\\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            onClick: () => handleListOptionClickLanguage('Російська', 'color'),\n            children: \"\\u0420\\u043E\\u0441\\u0456\\u0439\\u0441\\u044C\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const handleClickOutside = event => {\n    // Отслеживание где был произведен клик\n    if (serviceRef.current && !serviceRef.current.contains(event.target)) {\n      setIsOpenedService(false);\n    }\n    if (languageRef.current && !languageRef.current.contains(event.target)) {\n      setIsOpenedService(false);\n    }\n  };\n  useEffect(() => {\n    // Закрытие кнопки, при нажатии вне области объекта\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  // ------------------------------------------------------------------------------------------------------------------ //\n  const {\n    text,\n    setTextValue\n  } = useText();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isInputActive, setInputActive] = useState(false);\n  const [charCount, setCharCount] = useState(0);\n  const [isCharCounterVisible, setCharCounterVisible] = useState(false);\n  const updateCharCount = text => {\n    // Убираем пробелы из текста перед подсчетом символов\n    setCharCount(text.length);\n  };\n  const countTextChange = event => {\n    const newText = event.target.value;\n    setTextValue(newText);\n    updateCharCount(newText);\n\n    // Проверка, чтобы показать счетчик символов только после первого введенного символа\n    if (newText.length > 0) {\n      setCharCounterVisible(true);\n    } else {\n      setCharCounterVisible(false);\n    }\n  };\n  const handleTextChange = event => {\n    setTextValue(event.target.value);\n    if (event.target.value.length > 0) {\n      setInputActive(true);\n    } else {\n      setInputActive(false);\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      const reader = new FileReader();\n      reader.onload = event => {\n        const fileContent = event.target.result;\n        setTextValue(fileContent);\n        setInputActive(true);\n        setCharCounterVisible(true); // Показать счетчик символов после загрузки файла\n      };\n\n      reader.readAsText(file);\n    } else {\n      setSelectedFile(null);\n      setTextValue('');\n      setInputActive(false);\n      setCharCounterVisible(false); // Скрыть счетчик символов при удалении файла\n    }\n  };\n\n  useEffect(() => {\n    // Подсчет символов сразу после загрузки файла\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        const fileContent = event.target.result;\n        updateCharCount(fileContent);\n      };\n      reader.readAsText(selectedFile);\n    }\n  }, [selectedFile]);\n  // ------------------------------------------------------------------------------------------------------------------ //\n\n  // ------------------------------------------------------------------------------------------------------------------ //\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main_new\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"section_new makeOrder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"makeOrder_item inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"medium_title\",\n          children: \"\\u0417\\u0430\\u043C\\u043E\\u0432\\u0438\\u0442\\u0438 \\u043F\\u0435\\u0440\\u0435\\u043A\\u043B\\u0430\\u0434 \\u0430\\u0431\\u043E \\u0440\\u0435\\u0434\\u0430\\u0433\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: `${isOpenedService ? 'checked' : ''}`,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-checkbox\",\n            ref: serviceRef,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `custom-button ${isOpenedService ? 'checked' : ''} ${selectedColor}`,\n              onClick: handleButtonClickService,\n              type: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [selectedValue, /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"icon\",\n                  src: \"/arrow_down.svg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `hidden-list ${isOpenedService ? 'active' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"position-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  onClick: () => handleListOptionClickService('Редагування', \"color\"),\n                  children: \"\\u0420\\u0435\\u0434\\u0430\\u0433\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  onClick: () => handleListOptionClickService('Переклад', \"color\"),\n                  children: \"\\u041F\\u0435\\u0440\\u0435\\u043A\\u043B\\u0430\\u0434\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"area\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"area-text\",\n            value: text,\n            onChange: handleTextChange,\n            onKeyUp: countTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), isCharCounterVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"char-count\",\n            children: [charCount, \" \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0456\\u0432\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"area-download\",\n            children: [isInputActive ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"placeholder\",\n              children: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0430\\u0431\\u043E \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), isInputActive ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"area-label\",\n              children: [\"\\u0437\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\", /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"area-input\",\n                type: \"file\",\n                onChange: handleFileChange,\n                accept: \".doc, .docx, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, .csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel, application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain, application.pdf, .rtf, .txt, .pdf, .zip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"text_field email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"text_field name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"text_field comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"button-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: `${isOpenedLanguage ? 'checked' : ''}`,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-checkbox\",\n            ref: languageRef,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `custom-button ${isOpenedLanguage ? 'checked' : ''} ${selectedColor}`,\n              onClick: handleButtonClickLanguage,\n              type: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [selectedLanguage, /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"icon\",\n                  src: \"/arrow_down.svg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `hidden-list ${isOpenedLanguage ? 'active' : ''}`,\n              children: getLanguageOptions()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"makeOrder_item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"GfztT7Ku+i8n0RYirZW+Dpj6oAk=\", false, function () {\n  return [useText];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useText","jsxDEV","_jsxDEV","App","_s","isOpenedService","setIsOpenedService","selectedValue","setSelectedValue","selectedColor","setSelectedColor","label","setLabel","serviceRef","isOpenedLanguage","setIsOpenedLanguage","selectedLanguage","setSelectedLanguage","valueLanguageColor","setValueLanguageColor","languageRef","firstButtonSelected","setFirstButtonSelected","selectedServiceOption","setSelectedServiceOption","handleButtonClickService","handleButtonClickLanguage","handleListOptionClickService","value","color","handleListOptionClickLanguage","getLanguageOptions","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","text","setTextValue","selectedFile","setSelectedFile","isInputActive","setInputActive","charCount","setCharCount","isCharCounterVisible","setCharCounterVisible","updateCharCount","length","countTextChange","newText","handleTextChange","handleFileChange","file","files","reader","FileReader","onload","fileContent","result","readAsText","ref","type","alt","src","onChange","onKeyUp","accept","_c","$RefreshReg$"],"sources":["C:/Users/romav/WebstormProjects/react/src/App.js"],"sourcesContent":["import \"./styles/App.css\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport {useText} from \"./components/TextContext/TextContext\";\n\nfunction App() {\n// Data for operation of the first button responsible for service selection ( данные для работа первой кнопки которая отвечает за выбор услуги )\n    const [isOpenedService, setIsOpenedService] = useState(false);\n    const [selectedValue, setSelectedValue] = useState(\"Послуга\"); // Начальное значение кнопки\n    const [selectedColor, setSelectedColor] = useState(\"\"); // Цвет для выбранного значения\n    const [label, setLabel] = useState('')\n    const serviceRef = useRef(null);\n\n    const [isOpenedLanguage, setIsOpenedLanguage] = useState(false);\n    const [selectedLanguage, setSelectedLanguage] = useState(\"Мова\"); // Начальное значение кнопки\n    const [valueLanguageColor, setValueLanguageColor] = useState('');\n    const languageRef = useRef(null);\n\n    const [firstButtonSelected, setFirstButtonSelected] = useState(false);\n    const [selectedServiceOption, setSelectedServiceOption] = useState('');\n\n    const handleButtonClickService = () => { // Активация кнопки\n        setIsOpenedService(!isOpenedService);\n    };\n    const handleButtonClickLanguage = () => { // Активация кнопки\n        if (firstButtonSelected) {\n            setIsOpenedLanguage(!isOpenedLanguage);\n        }\n    };\n\n    const handleListOptionClickService = (value, color) => { // Смена параметров кнопки Услуги\n        setSelectedValue(value);\n        setSelectedColor(color);\n        setIsOpenedService(false);\n        setFirstButtonSelected(true);\n        setSelectedServiceOption(value);\n        setLabel('Послуга')\n\n        if (value === 'Переклад') {\n            setSelectedLanguage('Мовна пара');\n        }\n    };\n\n    const handleListOptionClickLanguage = (value, color) => {\n        setSelectedLanguage(value)\n        setValueLanguageColor(color)\n        setIsOpenedLanguage(!isOpenedLanguage)\n    }\n\n\n    const getLanguageOptions = () => {\n        switch (selectedServiceOption) {\n            case 'Редагування':\n                return (\n                    <div className=\"position-list-value-language\">\n                        <label onClick={() => handleListOptionClickLanguage('Українська', 'color')}>Українська</label>\n                        <label onClick={() => handleListOptionClickLanguage('Російська', 'color')}>Російська</label>\n                        <label onClick={() => handleListOptionClickLanguage('Англійська', 'color')}>Англійська</label>\n                        <label onClick={() => handleListOptionClickLanguage('Англійська (носій)', 'color')}>Англійська\n                                                                                                           (носій)</label>\n                    </div>\n                );\n            case 'Переклад':\n                return (\n                    <div className=\"position-list-value-language\">\n                        <label onClick={() => handleListOptionClickLanguage('Українська', 'color')}>Українська</label>\n                        <label onClick={() => handleListOptionClickLanguage('Російська', 'color')}>Російська</label>\n                    </div>\n                );\n            default:\n                return null;\n        }\n    };\n\n\n    const handleClickOutside = (event) => { // Отслеживание где был произведен клик\n        if (serviceRef.current && !serviceRef.current.contains(event.target)) {\n            setIsOpenedService(false);\n        }\n        if (languageRef.current && !languageRef.current.contains(event.target)) {\n            setIsOpenedService(false);\n        }\n    };\n\n    useEffect(() => { // Закрытие кнопки, при нажатии вне области объекта\n        document.addEventListener('click', handleClickOutside);\n        return () => {\n            document.removeEventListener('click', handleClickOutside);\n        };\n    }, []);\n// ------------------------------------------------------------------------------------------------------------------ //\n    const {text, setTextValue} = useText();\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [isInputActive, setInputActive] = useState(false);\n    const [charCount, setCharCount] = useState(0);\n    const [isCharCounterVisible, setCharCounterVisible] = useState(false);\n\n\n    const updateCharCount = (text) => {\n        // Убираем пробелы из текста перед подсчетом символов\n        setCharCount(text.length);\n    };\n\n    const countTextChange = (event) => {\n        const newText = event.target.value;\n        setTextValue(newText);\n        updateCharCount(newText);\n\n        // Проверка, чтобы показать счетчик символов только после первого введенного символа\n        if (newText.length > 0) {\n            setCharCounterVisible(true);\n        } else {\n            setCharCounterVisible(false);\n        }\n    };\n\n    const handleTextChange = (event) => {\n        setTextValue(event.target.value);\n        if (event.target.value.length > 0) {\n            setInputActive(true);\n        } else {\n            setInputActive(false);\n        }\n    };\n\n    const handleFileChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            setSelectedFile(file);\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                const fileContent = event.target.result;\n                setTextValue(fileContent);\n                setInputActive(true);\n                setCharCounterVisible(true); // Показать счетчик символов после загрузки файла\n            };\n            reader.readAsText(file);\n        } else {\n            setSelectedFile(null);\n            setTextValue('');\n            setInputActive(false);\n            setCharCounterVisible(false); // Скрыть счетчик символов при удалении файла\n        }\n    };\n\n\n    useEffect(() => {\n        // Подсчет символов сразу после загрузки файла\n        if (selectedFile) {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                const fileContent = event.target.result;\n                updateCharCount(fileContent);\n            };\n            reader.readAsText(selectedFile);\n        }\n    }, [selectedFile]);\n// ------------------------------------------------------------------------------------------------------------------ //\n\n\n// ------------------------------------------------------------------------------------------------------------------ //\n\n\n    return (\n        <main className=\"main_new\">\n            <form className=\"section_new makeOrder\">\n                <div className=\"makeOrder_item inputs\">\n                    <h3 className=\"medium_title\">Замовити переклад або редагування</h3>\n{/* First service selection button ( первая кнопка выбора услуги ) ------------------------------------------------- */}\n                    <fieldset>\n                        <legend className={`${isOpenedService ? 'checked' : ''}`}>{label}</legend>\n                        <div className=\"button-checkbox\" ref={serviceRef}>\n                            <button\n                                className={`custom-button ${isOpenedService ? 'checked' : ''} ${selectedColor}`}\n                                onClick={handleButtonClickService}\n                                type=\"button\"\n                            >\n                                <label>\n                                    {selectedValue}\n                                    <img alt=\"icon\" src=\"/arrow_down.svg\"/>\n                                </label>\n                            </button>\n                            <div className={`hidden-list ${isOpenedService ? 'active' : ''}`}>\n                                <div className=\"position-list\">\n                                    <label onClick={() => handleListOptionClickService('Редагування', \"color\")}>Редагування</label>\n                                    <label onClick={() => handleListOptionClickService('Переклад', \"color\")}>Переклад</label>\n                                </div>\n                            </div>\n                        </div>\n                    </fieldset>\n{/* ---------------------------------------------------------------------------------------------------------------- */}\n                    <div className=\"area\">\n            <textarea\n                className=\"area-text\"\n                value={text}\n                onChange={handleTextChange}\n                onKeyUp={countTextChange}\n            ></textarea>\n                        {isCharCounterVisible && (\n                            <div className=\"char-count\">{charCount} символів</div>\n                        )}\n                        <div className=\"area-download\">\n                            {isInputActive ? null : (\n                                <span className=\"placeholder\">Введіть текст або </span>\n                            )}\n                            {isInputActive ? null : (\n                                <label className=\"area-label\">\n                                    завантажте файл\n                                    <input\n                                        className=\"area-input\"\n                                        type=\"file\"\n                                        onChange={handleFileChange}\n                                        accept=\".doc, .docx, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, .csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel, application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain, application.pdf, .rtf, .txt, .pdf, .zip\"\n                                    />\n                                </label>\n                            )}\n                        </div>\n                    </div>\n{/* ---------------------------------------------------------------------------------------------------------------- */}\n                    <fieldset className='text_field email'></fieldset>\n                    <fieldset className='text_field name'></fieldset>\n                    <fieldset className='text_field comment'></fieldset>\n                    <fieldset className='button-checkbox'>\n                        <legend className={`${isOpenedLanguage ? 'checked' : ''}`}>{label}</legend>\n                        <div className=\"button-checkbox\" ref={languageRef}>\n                            <button\n                                className={`custom-button ${isOpenedLanguage ? 'checked' : ''} ${selectedColor}`}\n                                onClick={handleButtonClickLanguage}\n                                type=\"button\"\n                            >\n                                <label>\n                                    {selectedLanguage}\n                                    <img alt=\"icon\" src=\"/arrow_down.svg\"/>\n                                </label>\n                            </button>\n                            <div className={`hidden-list ${isOpenedLanguage ? 'active' : ''}`}>\n                                {getLanguageOptions()}\n                            </div>\n                        </div>\n                    </fieldset>\n                </div>\n                <div className=\"makeOrder_item\"></div>\n            </form>\n        </main>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,kBAAkB;AACzB,OAAOA,KAAK,IAAGC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACxD,SAAQC,OAAO,QAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACf;EACI,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMc,UAAU,GAAGf,MAAM,CAAC,IAAI,CAAC;EAE/B,MAAM,CAACgB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EAClE,MAAM,CAACmB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAMqB,WAAW,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAM,CAACuB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACwB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAEtE,MAAM0B,wBAAwB,GAAGA,CAAA,KAAM;IAAE;IACrCnB,kBAAkB,CAAC,CAACD,eAAe,CAAC;EACxC,CAAC;EACD,MAAMqB,yBAAyB,GAAGA,CAAA,KAAM;IAAE;IACtC,IAAIL,mBAAmB,EAAE;MACrBN,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;IAC1C;EACJ,CAAC;EAED,MAAMa,4BAA4B,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAAE;IACrDrB,gBAAgB,CAACoB,KAAK,CAAC;IACvBlB,gBAAgB,CAACmB,KAAK,CAAC;IACvBvB,kBAAkB,CAAC,KAAK,CAAC;IACzBgB,sBAAsB,CAAC,IAAI,CAAC;IAC5BE,wBAAwB,CAACI,KAAK,CAAC;IAC/BhB,QAAQ,CAAC,SAAS,CAAC;IAEnB,IAAIgB,KAAK,KAAK,UAAU,EAAE;MACtBX,mBAAmB,CAAC,YAAY,CAAC;IACrC;EACJ,CAAC;EAED,MAAMa,6BAA6B,GAAGA,CAACF,KAAK,EAAEC,KAAK,KAAK;IACpDZ,mBAAmB,CAACW,KAAK,CAAC;IAC1BT,qBAAqB,CAACU,KAAK,CAAC;IAC5Bd,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;EAC1C,CAAC;EAGD,MAAMiB,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,QAAQR,qBAAqB;MACzB,KAAK,aAAa;QACd,oBACIrB,OAAA;UAAK8B,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBACzC/B,OAAA;YAAOgC,OAAO,EAAEA,CAAA,KAAMJ,6BAA6B,CAAC,YAAY,EAAE,OAAO,CAAE;YAAAG,QAAA,EAAC;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9FpC,OAAA;YAAOgC,OAAO,EAAEA,CAAA,KAAMJ,6BAA6B,CAAC,WAAW,EAAE,OAAO,CAAE;YAAAG,QAAA,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5FpC,OAAA;YAAOgC,OAAO,EAAEA,CAAA,KAAMJ,6BAA6B,CAAC,YAAY,EAAE,OAAO,CAAE;YAAAG,QAAA,EAAC;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9FpC,OAAA;YAAOgC,OAAO,EAAEA,CAAA,KAAMJ,6BAA6B,CAAC,oBAAoB,EAAE,OAAO,CAAE;YAAAG,QAAA,EAAC;UACM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjG,CAAC;MAEd,KAAK,UAAU;QACX,oBACIpC,OAAA;UAAK8B,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBACzC/B,OAAA;YAAOgC,OAAO,EAAEA,CAAA,KAAMJ,6BAA6B,CAAC,YAAY,EAAE,OAAO,CAAE;YAAAG,QAAA,EAAC;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9FpC,OAAA;YAAOgC,OAAO,EAAEA,CAAA,KAAMJ,6BAA6B,CAAC,WAAW,EAAE,OAAO,CAAE;YAAAG,QAAA,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3F,CAAC;MAEd;QACI,OAAO,IAAI;IACnB;EACJ,CAAC;EAGD,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IAAE;IACpC,IAAI3B,UAAU,CAAC4B,OAAO,IAAI,CAAC5B,UAAU,CAAC4B,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;MAClErC,kBAAkB,CAAC,KAAK,CAAC;IAC7B;IACA,IAAIc,WAAW,CAACqB,OAAO,IAAI,CAACrB,WAAW,CAACqB,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;MACpErC,kBAAkB,CAAC,KAAK,CAAC;IAC7B;EACJ,CAAC;EAEDT,SAAS,CAAC,MAAM;IAAE;IACd+C,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEN,kBAAkB,CAAC;IACtD,OAAO,MAAM;MACTK,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEP,kBAAkB,CAAC;IAC7D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACV;EACI,MAAM;IAACQ,IAAI;IAAEC;EAAY,CAAC,GAAGhD,OAAO,CAAC,CAAC;EACtC,MAAM,CAACiD,YAAY,EAAEC,eAAe,CAAC,GAAGnD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACoD,aAAa,EAAEC,cAAc,CAAC,GAAGrD,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACsD,SAAS,EAAEC,YAAY,CAAC,GAAGvD,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACwD,oBAAoB,EAAEC,qBAAqB,CAAC,GAAGzD,QAAQ,CAAC,KAAK,CAAC;EAGrE,MAAM0D,eAAe,GAAIV,IAAI,IAAK;IAC9B;IACAO,YAAY,CAACP,IAAI,CAACW,MAAM,CAAC;EAC7B,CAAC;EAED,MAAMC,eAAe,GAAInB,KAAK,IAAK;IAC/B,MAAMoB,OAAO,GAAGpB,KAAK,CAACG,MAAM,CAACf,KAAK;IAClCoB,YAAY,CAACY,OAAO,CAAC;IACrBH,eAAe,CAACG,OAAO,CAAC;;IAExB;IACA,IAAIA,OAAO,CAACF,MAAM,GAAG,CAAC,EAAE;MACpBF,qBAAqB,CAAC,IAAI,CAAC;IAC/B,CAAC,MAAM;MACHA,qBAAqB,CAAC,KAAK,CAAC;IAChC;EACJ,CAAC;EAED,MAAMK,gBAAgB,GAAIrB,KAAK,IAAK;IAChCQ,YAAY,CAACR,KAAK,CAACG,MAAM,CAACf,KAAK,CAAC;IAChC,IAAIY,KAAK,CAACG,MAAM,CAACf,KAAK,CAAC8B,MAAM,GAAG,CAAC,EAAE;MAC/BN,cAAc,CAAC,IAAI,CAAC;IACxB,CAAC,MAAM;MACHA,cAAc,CAAC,KAAK,CAAC;IACzB;EACJ,CAAC;EAED,MAAMU,gBAAgB,GAAItB,KAAK,IAAK;IAChC,MAAMuB,IAAI,GAAGvB,KAAK,CAACG,MAAM,CAACqB,KAAK,CAAC,CAAC,CAAC;IAClC,IAAID,IAAI,EAAE;MACNb,eAAe,CAACa,IAAI,CAAC;MACrB,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAI3B,KAAK,IAAK;QACvB,MAAM4B,WAAW,GAAG5B,KAAK,CAACG,MAAM,CAAC0B,MAAM;QACvCrB,YAAY,CAACoB,WAAW,CAAC;QACzBhB,cAAc,CAAC,IAAI,CAAC;QACpBI,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;MACjC,CAAC;;MACDS,MAAM,CAACK,UAAU,CAACP,IAAI,CAAC;IAC3B,CAAC,MAAM;MACHb,eAAe,CAAC,IAAI,CAAC;MACrBF,YAAY,CAAC,EAAE,CAAC;MAChBI,cAAc,CAAC,KAAK,CAAC;MACrBI,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC;IAClC;EACJ,CAAC;;EAGD3D,SAAS,CAAC,MAAM;IACZ;IACA,IAAIoD,YAAY,EAAE;MACd,MAAMgB,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAI3B,KAAK,IAAK;QACvB,MAAM4B,WAAW,GAAG5B,KAAK,CAACG,MAAM,CAAC0B,MAAM;QACvCZ,eAAe,CAACW,WAAW,CAAC;MAChC,CAAC;MACDH,MAAM,CAACK,UAAU,CAACrB,YAAY,CAAC;IACnC;EACJ,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EACtB;;EAGA;;EAGI,oBACI/C,OAAA;IAAM8B,SAAS,EAAC,UAAU;IAAAC,QAAA,eACtB/B,OAAA;MAAM8B,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACnC/B,OAAA;QAAK8B,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBAClC/B,OAAA;UAAI8B,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAiC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEnEpC,OAAA;UAAA+B,QAAA,gBACI/B,OAAA;YAAQ8B,SAAS,EAAG,GAAE3B,eAAe,GAAG,SAAS,GAAG,EAAG,EAAE;YAAA4B,QAAA,EAAEtB;UAAK;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAC1EpC,OAAA;YAAK8B,SAAS,EAAC,iBAAiB;YAACuC,GAAG,EAAE1D,UAAW;YAAAoB,QAAA,gBAC7C/B,OAAA;cACI8B,SAAS,EAAG,iBAAgB3B,eAAe,GAAG,SAAS,GAAG,EAAG,IAAGI,aAAc,EAAE;cAChFyB,OAAO,EAAET,wBAAyB;cAClC+C,IAAI,EAAC,QAAQ;cAAAvC,QAAA,eAEb/B,OAAA;gBAAA+B,QAAA,GACK1B,aAAa,eACdL,OAAA;kBAAKuE,GAAG,EAAC,MAAM;kBAACC,GAAG,EAAC;gBAAiB;kBAAAvC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACTpC,OAAA;cAAK8B,SAAS,EAAG,eAAc3B,eAAe,GAAG,QAAQ,GAAG,EAAG,EAAE;cAAA4B,QAAA,eAC7D/B,OAAA;gBAAK8B,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC1B/B,OAAA;kBAAOgC,OAAO,EAAEA,CAAA,KAAMP,4BAA4B,CAAC,aAAa,EAAE,OAAO,CAAE;kBAAAM,QAAA,EAAC;gBAAW;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC/FpC,OAAA;kBAAOgC,OAAO,EAAEA,CAAA,KAAMP,4BAA4B,CAAC,UAAU,EAAE,OAAO,CAAE;kBAAAM,QAAA,EAAC;gBAAQ;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAEXpC,OAAA;UAAK8B,SAAS,EAAC,MAAM;UAAAC,QAAA,gBAC7B/B,OAAA;YACI8B,SAAS,EAAC,WAAW;YACrBJ,KAAK,EAAEmB,IAAK;YACZ4B,QAAQ,EAAEd,gBAAiB;YAC3Be,OAAO,EAAEjB;UAAgB;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,EACCiB,oBAAoB,iBACjBrD,OAAA;YAAK8B,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAEoB,SAAS,EAAC,mDAAS;UAAA;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACxD,eACDpC,OAAA;YAAK8B,SAAS,EAAC,eAAe;YAAAC,QAAA,GACzBkB,aAAa,GAAG,IAAI,gBACjBjD,OAAA;cAAM8B,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAC;YAAkB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACzD,EACAa,aAAa,GAAG,IAAI,gBACjBjD,OAAA;cAAO8B,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,uFAE1B,eAAA/B,OAAA;gBACI8B,SAAS,EAAC,YAAY;gBACtBwC,IAAI,EAAC,MAAM;gBACXG,QAAQ,EAAEb,gBAAiB;gBAC3Be,MAAM,EAAC;cAA+U;gBAAA1C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzV,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACV;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAENpC,OAAA;UAAU8B,SAAS,EAAC;QAAkB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eAClDpC,OAAA;UAAU8B,SAAS,EAAC;QAAiB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACjDpC,OAAA;UAAU8B,SAAS,EAAC;QAAoB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACpDpC,OAAA;UAAU8B,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBACjC/B,OAAA;YAAQ8B,SAAS,EAAG,GAAElB,gBAAgB,GAAG,SAAS,GAAG,EAAG,EAAE;YAAAmB,QAAA,EAAEtB;UAAK;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAC3EpC,OAAA;YAAK8B,SAAS,EAAC,iBAAiB;YAACuC,GAAG,EAAEnD,WAAY;YAAAa,QAAA,gBAC9C/B,OAAA;cACI8B,SAAS,EAAG,iBAAgBlB,gBAAgB,GAAG,SAAS,GAAG,EAAG,IAAGL,aAAc,EAAE;cACjFyB,OAAO,EAAER,yBAA0B;cACnC8C,IAAI,EAAC,QAAQ;cAAAvC,QAAA,eAEb/B,OAAA;gBAAA+B,QAAA,GACKjB,gBAAgB,eACjBd,OAAA;kBAAKuE,GAAG,EAAC,MAAM;kBAACC,GAAG,EAAC;gBAAiB;kBAAAvC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACTpC,OAAA;cAAK8B,SAAS,EAAG,eAAclB,gBAAgB,GAAG,QAAQ,GAAG,EAAG,EAAE;cAAAmB,QAAA,EAC7DF,kBAAkB,CAAC;YAAC;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACNpC,OAAA;QAAK8B,SAAS,EAAC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEf;AAAClC,EAAA,CAhPQD,GAAG;EAAA,QAsFqBH,OAAO;AAAA;AAAA8E,EAAA,GAtF/B3E,GAAG;AAkPZ,eAAeA,GAAG;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}