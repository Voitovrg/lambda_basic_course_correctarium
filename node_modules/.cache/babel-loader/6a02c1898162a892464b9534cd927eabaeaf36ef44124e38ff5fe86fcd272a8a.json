{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romav\\\\WebstormProjects\\\\react\\\\src\\\\components\\\\MyArea\\\\MyArea.jsx\",\n  _s = $RefreshSig$();\nimport './MyArea.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyArea = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isInputActive, setInputActive] = useState(false);\n  const [charCount, setCharCount] = useState(0);\n  const [isCharCounterVisible, setCharCounterVisible] = useState(false);\n  const updateCharCount = text => {\n    // Убираем пробелы из текста перед подсчетом символов\n    const textWithoutSpaces = text.replace(/\\s/g, '');\n    setCharCount(textWithoutSpaces.length);\n  };\n  const countTextChange = event => {\n    const newText = event.target.value;\n    setText(newText);\n    updateCharCount(newText);\n\n    // Проверка, чтобы показать счетчик символов только после первого введенного символа\n    if (newText.length > 0) {\n      setCharCounterVisible(true);\n    } else {\n      setCharCounterVisible(false);\n    }\n  };\n  const handleTextChange = event => {\n    setText(event.target.value);\n    if (event.target.value.length > 0) {\n      setInputActive(true);\n    } else {\n      setInputActive(false);\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      const reader = new FileReader();\n      reader.onload = event => {\n        const fileContent = event.target.result;\n        setText(fileContent);\n        setInputActive(true);\n        setCharCounterVisible(true); // Показать счетчик символов после загрузки файла\n      };\n\n      reader.readAsText(file);\n    } else {\n      setSelectedFile(null);\n      setText('');\n      setInputActive(false);\n      setCharCounterVisible(false); // Скрыть счетчик символов при удалении файла\n    }\n  };\n\n  useEffect(() => {\n    // Подсчет символов сразу после загрузки файла\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        const fileContent = event.target.result;\n        updateCharCount(fileContent);\n      };\n      reader.readAsText(selectedFile);\n    }\n  }, [selectedFile]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"area\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"area-text\",\n      value: text,\n      onChange: handleTextChange,\n      onKeyUp: countTextChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), isCharCounterVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char-count\",\n      children: [charCount, \" \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0456\\u0432\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"area-download\",\n      children: [isInputActive ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"placeholder\",\n        children: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0430\\u0431\\u043E \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), isInputActive ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"area-label\",\n        children: [\"\\u0437\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"area-input\",\n          type: \"file\",\n          onChange: handleFileChange,\n          accept: \".doc, .docx, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, .csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel, application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain, application.pdf, .rtf, .txt, .pdf, .zip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(MyArea, \"5EIEdKAQB2Y0F2He7cGu4kPUdLA=\");\n_c = MyArea;\nexport default MyArea;\nvar _c;\n$RefreshReg$(_c, \"MyArea\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MyArea","_s","text","setText","selectedFile","setSelectedFile","isInputActive","setInputActive","charCount","setCharCount","isCharCounterVisible","setCharCounterVisible","updateCharCount","textWithoutSpaces","replace","length","countTextChange","event","newText","target","value","handleTextChange","handleFileChange","file","files","reader","FileReader","onload","fileContent","result","readAsText","className","children","onChange","onKeyUp","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","_c","$RefreshReg$"],"sources":["C:/Users/romav/WebstormProjects/react/src/components/MyArea/MyArea.jsx"],"sourcesContent":["import './MyArea.css';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst MyArea = () => {\r\n    const [text, setText] = useState('');\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [isInputActive, setInputActive] = useState(false);\r\n    const [charCount, setCharCount] = useState(0);\r\n    const [isCharCounterVisible, setCharCounterVisible] = useState(false);\r\n\r\n    const updateCharCount = (text) => {\r\n        // Убираем пробелы из текста перед подсчетом символов\r\n        const textWithoutSpaces = text.replace(/\\s/g, '');\r\n        setCharCount(textWithoutSpaces.length);\r\n    };\r\n\r\n    const countTextChange = (event) => {\r\n        const newText = event.target.value;\r\n        setText(newText);\r\n        updateCharCount(newText);\r\n\r\n        // Проверка, чтобы показать счетчик символов только после первого введенного символа\r\n        if (newText.length > 0) {\r\n            setCharCounterVisible(true);\r\n        } else {\r\n            setCharCounterVisible(false);\r\n        }\r\n    };\r\n\r\n    const handleTextChange = (event) => {\r\n        setText(event.target.value);\r\n        if (event.target.value.length > 0) {\r\n            setInputActive(true);\r\n        } else {\r\n            setInputActive(false);\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            setSelectedFile(file);\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (event) => {\r\n                const fileContent = event.target.result;\r\n                setText(fileContent);\r\n                setInputActive(true);\r\n                setCharCounterVisible(true); // Показать счетчик символов после загрузки файла\r\n            };\r\n            reader.readAsText(file);\r\n        } else {\r\n            setSelectedFile(null);\r\n            setText('');\r\n            setInputActive(false);\r\n            setCharCounterVisible(false); // Скрыть счетчик символов при удалении файла\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Подсчет символов сразу после загрузки файла\r\n        if (selectedFile) {\r\n            const reader = new FileReader();\r\n            reader.onload = (event) => {\r\n                const fileContent = event.target.result;\r\n                updateCharCount(fileContent);\r\n            };\r\n            reader.readAsText(selectedFile);\r\n        }\r\n    }, [selectedFile]);\r\n\r\n    return (\r\n        <div className=\"area\">\r\n            <textarea\r\n                className=\"area-text\"\r\n                value={text}\r\n                onChange={handleTextChange}\r\n                onKeyUp={countTextChange}\r\n            ></textarea>\r\n            {isCharCounterVisible && (\r\n                <div className=\"char-count\">{charCount} символів</div>\r\n            )}\r\n            <div className=\"area-download\">\r\n                {isInputActive ? null : (\r\n                    <span className=\"placeholder\">Введіть текст або </span>\r\n                )}\r\n                {isInputActive ? null : (\r\n                    <label className=\"area-label\">\r\n                        завантажте файл\r\n                        <input\r\n                            className=\"area-input\"\r\n                            type=\"file\"\r\n                            onChange={handleFileChange}\r\n                            accept=\".doc, .docx, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, .csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel, application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain, application.pdf, .rtf, .txt, .pdf, .zip\"\r\n                        />\r\n                    </label>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyArea;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}