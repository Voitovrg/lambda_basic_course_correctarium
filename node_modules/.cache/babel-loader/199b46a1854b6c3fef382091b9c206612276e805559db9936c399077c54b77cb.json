{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romav\\\\WebstormProjects\\\\react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./styles/App.css\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useText } from \"./components/TextContext/TextContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Data for operation of the first button responsible for service selection ( данные для работа первой кнопки которая отвечает за выбор услуги )\n  const [isOpenedService, setIsOpenedService] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"Послуга\"); // Начальное значение кнопки\n  const [selectedColor, setSelectedColor] = useState(\"\"); // Цвет для выбранного значения\n  const [label, setLabel] = useState('');\n  const serviceRef = useRef(null);\n  const [selectedLanguage, setSelectedLanguage] = useState(\"Мова\"); // Начальное значение кнопки\n  const [isOpenedLanguage, setIsOpenedLanguage] = useState(false);\n  const languageRef = useRef(null);\n  const handleButtonClickService = () => {\n    // Активация кнопки\n    setIsOpenedService(!isOpenedService);\n  };\n  const handleButtonClickLanguage = () => {\n    // Активация кнопки\n    setIsOpenedLanguage(!isOpenedLanguage);\n  };\n  const handleListOptionClickService = (value, color) => {\n    // Смена параметров кнопки Услуги\n    setSelectedValue(value);\n    setSelectedColor(color);\n    setIsOpenedService(false);\n    setLabel('Послуга');\n    if (value === 'Переклад') {\n      setSelectedLanguage('Мовна пара');\n    }\n  };\n  const handleListOptionClickLanguage = (value, color) => {\n    setSelectedLanguage(value);\n  };\n  const handleClickOutside = event => {\n    // Отслеживание где был произведен клик\n    if (serviceRef.current && !serviceRef.current.contains(event.target)) {\n      setIsOpenedService(false);\n    }\n    if (languageRef.current && !languageRef.current.contains(event.target)) {\n      setIsOpenedService(false);\n    }\n  };\n  useEffect(() => {\n    // Закрытие кнопки, при нажатии вне области объекта\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  // ------------------------------------------------------------------------------------------------------------------ //\n  const {\n    text,\n    setTextValue\n  } = useText();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isInputActive, setInputActive] = useState(false);\n  const [charCount, setCharCount] = useState(0);\n  const [isCharCounterVisible, setCharCounterVisible] = useState(false);\n  const updateCharCount = text => {\n    // Убираем пробелы из текста перед подсчетом символов\n    setCharCount(text.length);\n  };\n  const countTextChange = event => {\n    const newText = event.target.value;\n    setTextValue(newText);\n    updateCharCount(newText);\n\n    // Проверка, чтобы показать счетчик символов только после первого введенного символа\n    if (newText.length > 0) {\n      setCharCounterVisible(true);\n    } else {\n      setCharCounterVisible(false);\n    }\n  };\n  const handleTextChange = event => {\n    setTextValue(event.target.value);\n    if (event.target.value.length > 0) {\n      setInputActive(true);\n    } else {\n      setInputActive(false);\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      const reader = new FileReader();\n      reader.onload = event => {\n        const fileContent = event.target.result;\n        setTextValue(fileContent);\n        setInputActive(true);\n        setCharCounterVisible(true); // Показать счетчик символов после загрузки файла\n      };\n\n      reader.readAsText(file);\n    } else {\n      setSelectedFile(null);\n      setTextValue('');\n      setInputActive(false);\n      setCharCounterVisible(false); // Скрыть счетчик символов при удалении файла\n    }\n  };\n\n  useEffect(() => {\n    // Подсчет символов сразу после загрузки файла\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        const fileContent = event.target.result;\n        updateCharCount(fileContent);\n      };\n      reader.readAsText(selectedFile);\n    }\n  }, [selectedFile]);\n  // ------------------------------------------------------------------------------------------------------------------ //\n\n  // ------------------------------------------------------------------------------------------------------------------ //\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main_new\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"section_new makeOrder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"makeOrder_item inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"medium_title\",\n          children: \"\\u0417\\u0430\\u043C\\u043E\\u0432\\u0438\\u0442\\u0438 \\u043F\\u0435\\u0440\\u0435\\u043A\\u043B\\u0430\\u0434 \\u0430\\u0431\\u043E \\u0440\\u0435\\u0434\\u0430\\u0433\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: `${isOpenedService ? 'checked' : ''}`,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-checkbox\",\n            ref: serviceRef,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `custom-button ${isOpenedService ? 'checked' : ''} ${selectedColor}`,\n              onClick: handleButtonClickService,\n              type: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [selectedValue, /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"icon\",\n                  src: \"/arrow_down.svg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `hidden-list ${isOpenedService ? 'active' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"position-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  onClick: () => handleListOptionClickService('Редагування', \"color\"),\n                  children: \"\\u0420\\u0435\\u0434\\u0430\\u0433\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  onClick: () => handleListOptionClickService('Переклад', \"color\"),\n                  children: \"\\u041F\\u0435\\u0440\\u0435\\u043A\\u043B\\u0430\\u0434\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"area\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"area-text\",\n            value: text,\n            onChange: handleTextChange,\n            onKeyUp: countTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), isCharCounterVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"char-count\",\n            children: [charCount, \" \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0456\\u0432\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"area-download\",\n            children: [isInputActive ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"placeholder\",\n              children: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0430\\u0431\\u043E \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this), isInputActive ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"area-label\",\n              children: [\"\\u0437\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\", /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"area-input\",\n                type: \"file\",\n                onChange: handleFileChange,\n                accept: \".doc, .docx, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, .csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel, application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain, application.pdf, .rtf, .txt, .pdf, .zip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"text_field email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"text_field name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"text_field comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"button-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: `${isOpenedLanguage ? 'checked' : ''}`,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-checkbox\",\n            ref: languageRef,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `custom-button ${isOpenedLanguage ? 'checked' : ''} ${selectedColor}`,\n              onClick: handleButtonClickLanguage,\n              type: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [selectedLanguage, /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"icon\",\n                  src: \"/arrow_down.svg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `hidden-list ${isOpenedLanguage ? 'active' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"position-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  onClick: () => handleListOptionClick('Редагування', \"color\"),\n                  children: \"\\u0420\\u0435\\u0434\\u0430\\u0433\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  onClick: () => handleListOptionClick('Переклад', \"color\"),\n                  children: \"\\u041F\\u0435\\u0440\\u0435\\u043A\\u043B\\u0430\\u0434\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"makeOrder_item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"2f8ABBl8xKq8+Z4XeIni+8NJkRs=\", false, function () {\n  return [useText];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useText","jsxDEV","_jsxDEV","App","_s","isOpenedService","setIsOpenedService","selectedValue","setSelectedValue","selectedColor","setSelectedColor","label","setLabel","serviceRef","selectedLanguage","setSelectedLanguage","isOpenedLanguage","setIsOpenedLanguage","languageRef","handleButtonClickService","handleButtonClickLanguage","handleListOptionClickService","value","color","handleListOptionClickLanguage","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","text","setTextValue","selectedFile","setSelectedFile","isInputActive","setInputActive","charCount","setCharCount","isCharCounterVisible","setCharCounterVisible","updateCharCount","length","countTextChange","newText","handleTextChange","handleFileChange","file","files","reader","FileReader","onload","fileContent","result","readAsText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","type","alt","src","onChange","onKeyUp","accept","handleListOptionClick","_c","$RefreshReg$"],"sources":["C:/Users/romav/WebstormProjects/react/src/App.js"],"sourcesContent":["import \"./styles/App.css\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport {useText} from \"./components/TextContext/TextContext\";\n\nfunction App() {\n// Data for operation of the first button responsible for service selection ( данные для работа первой кнопки которая отвечает за выбор услуги )\n    const [isOpenedService, setIsOpenedService] = useState(false);\n    const [selectedValue, setSelectedValue] = useState(\"Послуга\"); // Начальное значение кнопки\n    const [selectedColor, setSelectedColor] = useState(\"\"); // Цвет для выбранного значения\n    const [label, setLabel] = useState('')\n    const serviceRef = useRef(null);\n\n    const [selectedLanguage, setSelectedLanguage] = useState(\"Мова\"); // Начальное значение кнопки\n    const [isOpenedLanguage, setIsOpenedLanguage] = useState(false);\n    const languageRef = useRef(null);\n\n    const handleButtonClickService = () => { // Активация кнопки\n        setIsOpenedService(!isOpenedService);\n    };\n    const handleButtonClickLanguage = () => { // Активация кнопки\n        setIsOpenedLanguage(!isOpenedLanguage);\n    };\n\n    const handleListOptionClickService = (value, color) => { // Смена параметров кнопки Услуги\n        setSelectedValue(value);\n        setSelectedColor(color);\n        setIsOpenedService(false);\n        setLabel('Послуга')\n\n        if (value === 'Переклад') {\n            setSelectedLanguage('Мовна пара');\n        }\n    };\n\n    const handleListOptionClickLanguage = (value, color) => {\n        setSelectedLanguage(value)\n\n    }\n\n        const handleClickOutside = (event) => { // Отслеживание где был произведен клик\n        if (serviceRef.current && !serviceRef.current.contains(event.target)) {\n            setIsOpenedService(false);\n        }\n        if (languageRef.current && !languageRef.current.contains(event.target)) {\n            setIsOpenedService(false);\n        }\n    };\n\n    useEffect(() => { // Закрытие кнопки, при нажатии вне области объекта\n        document.addEventListener('click', handleClickOutside);\n        return () => {\n            document.removeEventListener('click', handleClickOutside);\n        };\n    }, []);\n// ------------------------------------------------------------------------------------------------------------------ //\n    const { text, setTextValue } = useText();\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [isInputActive, setInputActive] = useState(false);\n    const [charCount, setCharCount] = useState(0);\n    const [isCharCounterVisible, setCharCounterVisible] = useState(false);\n\n\n    const updateCharCount = (text) => {\n        // Убираем пробелы из текста перед подсчетом символов\n        setCharCount(text.length);\n    };\n\n    const countTextChange = (event) => {\n        const newText = event.target.value;\n        setTextValue(newText);\n        updateCharCount(newText);\n\n        // Проверка, чтобы показать счетчик символов только после первого введенного символа\n        if (newText.length > 0) {\n            setCharCounterVisible(true);\n        } else {\n            setCharCounterVisible(false);\n        }\n    };\n\n    const handleTextChange = (event) => {\n        setTextValue(event.target.value);\n        if (event.target.value.length > 0) {\n            setInputActive(true);\n        } else {\n            setInputActive(false);\n        }\n    };\n\n    const handleFileChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            setSelectedFile(file);\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                const fileContent = event.target.result;\n                setTextValue(fileContent);\n                setInputActive(true);\n                setCharCounterVisible(true); // Показать счетчик символов после загрузки файла\n            };\n            reader.readAsText(file);\n        } else {\n            setSelectedFile(null);\n            setTextValue('');\n            setInputActive(false);\n            setCharCounterVisible(false); // Скрыть счетчик символов при удалении файла\n        }\n    };\n\n\n    useEffect(() => {\n        // Подсчет символов сразу после загрузки файла\n        if (selectedFile) {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                const fileContent = event.target.result;\n                updateCharCount(fileContent);\n            };\n            reader.readAsText(selectedFile);\n        }\n    }, [selectedFile]);\n// ------------------------------------------------------------------------------------------------------------------ //\n\n\n\n// ------------------------------------------------------------------------------------------------------------------ //\n\n\n    return (\n        <main className=\"main_new\">\n            <form className=\"section_new makeOrder\">\n                <div className=\"makeOrder_item inputs\">\n                    <h3 className=\"medium_title\">Замовити переклад або редагування</h3>\n{/* First service selection button ( первая кнопка выбора услуги ) ------------------------------------------------- */}\n                    <fieldset>\n                        <legend className={`${isOpenedService ? 'checked' : ''}`}>{label}</legend>\n                        <div className=\"button-checkbox\" ref={serviceRef}>\n                            <button\n                                className={`custom-button ${isOpenedService ? 'checked' : ''} ${selectedColor}`}\n                                onClick={handleButtonClickService}\n                                type=\"button\"\n                            >\n                                <label>\n                                    {selectedValue}\n                                    <img alt=\"icon\" src=\"/arrow_down.svg\"/>\n                                </label>\n                            </button>\n                            <div className={`hidden-list ${isOpenedService ? 'active' : ''}`}>\n                                <div className=\"position-list\">\n                                    <label onClick={() => handleListOptionClickService('Редагування', \"color\")}>Редагування</label>\n                                    <label onClick={() => handleListOptionClickService('Переклад', \"color\")}>Переклад</label>\n                                </div>\n                            </div>\n                        </div>\n                    </fieldset>\n{/* ---------------------------------------------------------------------------------------------------------------- */}\n                    <div className=\"area\">\n            <textarea\n                className=\"area-text\"\n                value={text}\n                onChange={handleTextChange}\n                onKeyUp={countTextChange}\n            ></textarea>\n                        {isCharCounterVisible && (\n                            <div className=\"char-count\">{charCount} символів</div>\n                        )}\n                        <div className=\"area-download\">\n                            {isInputActive ? null : (\n                                <span className=\"placeholder\">Введіть текст або </span>\n                            )}\n                            {isInputActive ? null : (\n                                <label className=\"area-label\">\n                                    завантажте файл\n                                    <input\n                                        className=\"area-input\"\n                                        type=\"file\"\n                                        onChange={handleFileChange}\n                                        accept=\".doc, .docx, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, .csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel, application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain, application.pdf, .rtf, .txt, .pdf, .zip\"\n                                    />\n                                </label>\n                            )}\n                        </div>\n                    </div>\n{/* ---------------------------------------------------------------------------------------------------------------- */}\n                    <fieldset className='text_field email'></fieldset>\n                    <fieldset className='text_field name'></fieldset>\n                    <fieldset className='text_field comment'></fieldset>\n                    <fieldset className='button-checkbox'>\n                        <legend className={`${isOpenedLanguage ? 'checked' : ''}`}>{label}</legend>\n                        <div className=\"button-checkbox\" ref={languageRef}>\n                            <button\n                                className={`custom-button ${isOpenedLanguage ? 'checked' : ''} ${selectedColor}`}\n                                onClick={handleButtonClickLanguage}\n                                type=\"button\"\n                            >\n                                <label>\n                                    {selectedLanguage}\n                                    <img alt=\"icon\" src=\"/arrow_down.svg\"/>\n                                </label>\n                            </button>\n                            <div className={`hidden-list ${isOpenedLanguage ? 'active' : ''}`}>\n                                <div className=\"position-list\">\n                                    <label onClick={() => handleListOptionClick('Редагування', \"color\")}>Редагування</label>\n                                    <label onClick={() => handleListOptionClick('Переклад', \"color\")}>Переклад</label>\n                                </div>\n                            </div>\n                        </div>\n                    </fieldset>\n                </div>\n                <div className=\"makeOrder_item\"></div>\n            </form>\n        </main>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}