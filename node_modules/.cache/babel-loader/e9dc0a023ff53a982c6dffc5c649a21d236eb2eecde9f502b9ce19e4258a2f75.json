{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romav\\\\WebstormProjects\\\\react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useRef, useState } from \"react\";\nimport \"./styles/App.css\";\nimport MyCounter from \"./dev/components/Counter\";\nimport MyPostItem from \"./dev/components/PostItem\";\nimport MyInput from \"./dev/components/UI/input/MyInput\";\nimport PostList from \"./dev/components/PostList\";\nimport MyButton from \"./dev/components/UI/button/MyButton\";\nimport PostForm from \"./dev/components/PostForm\";\nimport MySelect from \"./dev/components/UI/select/MySelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: 'JavaScript',\n    body: 'Description per JavaScript'\n  }, {\n    id: 2,\n    title: 'Python',\n    body: 'Description per Python'\n  }, {\n    id: 3,\n    title: 'Java',\n    body: 'Description per Java'\n  }]);\n  const [selectedSort, setSelectedSort] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const sortedPosts = useMemo(() => {\n    if (selectedSort) {\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n    }\n    return posts;\n  }, [selectedSort, posts]);\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [searchQuery, sortedPosts]);\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  const sortPosts = sort => {\n    setSelectedSort(sort);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyInput, {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"Search...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n        value: selectedSort,\n        onChange: sortPosts,\n        defaultValue: \"Sorted by:\",\n        option: [{\n          value: 'title',\n          name: 'by title'\n        }, {\n          value: 'body',\n          name: 'by description'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), sortedAndSearchedPosts.length ? /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"List Posts One\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Post not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"uUldus01oMc++SP4wapAj67BpVE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useMemo","useRef","useState","MyCounter","MyPostItem","MyInput","PostList","MyButton","PostForm","MySelect","jsxDEV","_jsxDEV","App","_s","posts","setPosts","id","title","body","selectedSort","setSelectedSort","searchQuery","setSearchQuery","sortedPosts","sort","a","b","localeCompare","sortedAndSearchedPosts","filter","post","toLowerCase","includes","createPost","newPost","removePost","p","sortPosts","className","children","create","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","value","onChange","e","target","placeholder","defaultValue","option","name","length","remove","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/romav/WebstormProjects/react/src/App.js"],"sourcesContent":["import React, {useMemo, useRef, useState} from \"react\";\nimport \"./styles/App.css\";\nimport MyCounter from \"./dev/components/Counter\";\nimport MyPostItem from \"./dev/components/PostItem\";\nimport MyInput from \"./dev/components/UI/input/MyInput\";\nimport PostList from \"./dev/components/PostList\";\nimport MyButton from \"./dev/components/UI/button/MyButton\";\nimport PostForm from \"./dev/components/PostForm\";\nimport MySelect from \"./dev/components/UI/select/MySelect\";\n\nfunction App() {\n\n    const [posts, setPosts] = useState([\n        {id: 1, title: 'JavaScript', body: 'Description per JavaScript'},\n        {id: 2, title: 'Python', body: 'Description per Python'},\n        {id: 3, title: 'Java', body: 'Description per Java'},\n    ])\n\n    const [selectedSort, setSelectedSort] = useState('')\n    const [searchQuery, setSearchQuery] = useState('')\n\n    const sortedPosts = useMemo(() => {\n        if (selectedSort) {\n            return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]))\n        }\n        return posts;\n    }, [selectedSort, posts]);\n\n    const sortedAndSearchedPosts = useMemo(() => {\n        return sortedPosts.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()))\n    }, [searchQuery, sortedPosts])\n    const createPost = (newPost) => {\n        setPosts([...posts, newPost])\n    }\n\n    const removePost = (post) => {\n        setPosts(posts.filter(p => p.id !== post.id))\n    }\n\n    const sortPosts = (sort) => {\n        setSelectedSort(sort);\n    }\n\n    return (\n        <div className=\"App\">\n            <PostForm create={createPost}/>\n            <hr style={{margin: '15px 0'}}/>\n            <div>\n                <MyInput\n                    value={searchQuery}\n                    onChange={e => setSearchQuery(e.target.value)}\n                    placeholder=\"Search...\"\n                />\n                <MySelect\n                    value={selectedSort}\n                    onChange={sortPosts}\n                    defaultValue=\"Sorted by:\"\n                    option={[\n                        {value: 'title', name: 'by title'},\n                        {value: 'body', name: 'by description'},\n                    ]}/>\n            </div>\n            {sortedAndSearchedPosts.length\n                ? <PostList remove={removePost} posts={sortedAndSearchedPosts} title='List Posts One'/>\n                : <h1 style={{textAlign: 'center'}}>Post not found</h1>}\n        </div>);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}